        -:    0:Source:TestAllocator.c++
        -:    0:Graph:TestAllocator.gcno
        -:    0:Data:TestAllocator.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// ------------------------------------
        -:    2:// projects/allocator/TestAllocator.c++
        -:    3:// Copyright (C) 2014
        -:    4:// Glenn P. Downing
        -:    5:// ------------------------------------
        -:    6:
        -:    7:// --------
        -:    8:// includes
        -:    9:// --------
        -:   10:
        -:   11:#include <algorithm> // count
        -:   12:#include <memory>    // allocator
        -:   13:
        -:   14:#include "gtest/gtest.h"
        -:   15:
        -:   16:#include "Allocator.h"
        -:   17:
        -:   18:// -------------
        -:   19:// TestAllocator
        -:   20:// -------------
        -:   21:
        -:   22:template <typename A>
function _ZN13TestAllocatorISaIiEED0Ev called 0 returned 0% blocks executed 0%
function _ZN13TestAllocatorISaIiEED2Ev called 2 returned 100% blocks executed 75%
function _ZN13TestAllocatorISaIiEEC2Ev called 2 returned 100% blocks executed 100%
function _ZN13TestAllocatorISaIdEED0Ev called 0 returned 0% blocks executed 0%
function _ZN13TestAllocatorISaIdEED2Ev called 2 returned 100% blocks executed 75%
function _ZN13TestAllocatorISaIdEEC2Ev called 2 returned 100% blocks executed 100%
function _ZN13TestAllocatorI9AllocatorIiLi100EEED0Ev called 0 returned 0% blocks executed 0%
function _ZN13TestAllocatorI9AllocatorIiLi100EEED2Ev called 2 returned 100% blocks executed 75%
function _ZN13TestAllocatorI9AllocatorIiLi100EEEC2Ev called 2 returned 100% blocks executed 100%
function _ZN13TestAllocatorI9AllocatorIdLi100EEED0Ev called 0 returned 0% blocks executed 0%
function _ZN13TestAllocatorI9AllocatorIdLi100EEED2Ev called 2 returned 100% blocks executed 75%
function _ZN13TestAllocatorI9AllocatorIdLi100EEEC2Ev called 2 returned 100% blocks executed 100%
       16:   23:struct TestAllocator : testing::Test {
call    0 never executed
call    1 never executed
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
call    6 returned 100%
call    7 never executed
call    8 never executed
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
call   13 returned 100%
call   14 never executed
call   15 never executed
call   16 returned 100%
branch 17 taken 0% (fallthrough)
branch 18 taken 100%
call   19 never executed
call   20 returned 100%
call   21 never executed
call   22 never executed
call   23 returned 100%
branch 24 taken 0% (fallthrough)
branch 25 taken 100%
call   26 never executed
call   27 returned 100%
        -:   24:    // --------
        -:   25:    // typedefs
        -:   26:    // --------
        -:   27:
        -:   28:    typedef          A                  allocator_type;
        -:   29:    typedef typename A::value_type      value_type;
        -:   30:    typedef typename A::difference_type difference_type;
        -:   31:    typedef typename A::pointer         pointer;};
        -:   32:
        -:   33:typedef testing::Types<
        -:   34:            std::allocator<int>,
        -:   35:            std::allocator<double>,
        -:   36:            Allocator<int, 100>,
        -:   37:            Allocator<double, 100> >
        -:   38:        my_types;
        -:   39:
        -:   40:TYPED_TEST_CASE(TestAllocator, my_types);
        -:   41:
function _ZN22TestAllocator_One_TestISaIiEE8TestBodyEv called 1 returned 100% blocks executed 47%
function _ZN22TestAllocator_One_TestISaIdEE8TestBodyEv called 1 returned 100% blocks executed 47%
function _ZN22TestAllocator_One_TestI9AllocatorIiLi100EEE8TestBodyEv called 1 returned 100% blocks executed 47%
function _ZN22TestAllocator_One_TestI9AllocatorIdLi100EEE8TestBodyEv called 1 returned 100% blocks executed 47%
function _ZN22TestAllocator_One_TestISaIiEED0Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_One_TestISaIiEED2Ev called 1 returned 100% blocks executed 75%
function _ZN22TestAllocator_One_TestISaIdEED0Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_One_TestISaIdEED2Ev called 1 returned 100% blocks executed 75%
function _ZN22TestAllocator_One_TestI9AllocatorIiLi100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_One_TestI9AllocatorIiLi100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN22TestAllocator_One_TestI9AllocatorIdLi100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_One_TestI9AllocatorIdLi100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN22TestAllocator_One_TestISaIiEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_One_TestISaIdEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_One_TestI9AllocatorIiLi100EEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_One_TestI9AllocatorIdLi100EEEC2Ev called 1 returned 100% blocks executed 100%
       17:   42:TYPED_TEST(TestAllocator, One) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
call   12 returned 100%
call   13 returned 100%
call   14 returned 100%
branch 15 taken 0% (fallthrough)
branch 16 taken 100%
call   17 never executed
call   18 returned 100%
call   19 returned 100%
call   20 returned 100%
branch 21 taken 0% (fallthrough)
branch 22 taken 100%
call   23 never executed
call   24 returned 100%
call   25 returned 100%
call   26 returned 100%
call   27 returned 100%
call   28 returned 100%
        -:   43:    typedef typename TestFixture::allocator_type  allocator_type;
        -:   44:    typedef typename TestFixture::value_type      value_type;
        -:   45:    typedef typename TestFixture::difference_type difference_type;
        -:   46:    typedef typename TestFixture::pointer         pointer;
        -:   47:
        4:   48:    allocator_type x;
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
        4:   49:    const difference_type s = 1;
        4:   50:    const value_type      v = 2;
        4:   51:    const pointer         p = x.allocate(s);
branch  0 taken 100% (fallthrough)
branch  1 taken 0% (throw)
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0% (throw)
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
call    8 returned 100%
branch  9 taken 100% (fallthrough)
branch 10 taken 0% (throw)
call   11 returned 100%
        4:   52:    if (p != 0) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
        4:   53:        x.construct(p, v);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
        8:   54:        ASSERT_EQ(v, *p);
branch  0 taken 100% (fallthrough)
branch  1 taken 0% (throw)
call    2 returned 100%
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
branch  6 never executed
branch  7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
branch 18 never executed
branch 19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
call   23 never executed
branch 24 taken 100% (fallthrough)
branch 25 taken 0% (throw)
call   26 returned 100%
branch 27 taken 100%
branch 28 taken 0%
call   29 never executed
call   30 never executed
call   31 never executed
branch 32 taken 100% (fallthrough)
branch 33 taken 0% (throw)
call   34 returned 100%
call   35 returned 100%
branch 36 taken 0% (fallthrough)
branch 37 taken 100%
branch 38 never executed
branch 39 never executed
call   40 never executed
branch 41 never executed
branch 42 never executed
call   43 never executed
branch 44 never executed
branch 45 never executed
call   46 never executed
branch 47 never executed
branch 48 never executed
call   49 never executed
branch 50 never executed
branch 51 never executed
call   52 never executed
branch 53 never executed
branch 54 never executed
call   55 never executed
branch 56 taken 100% (fallthrough)
branch 57 taken 0% (throw)
call   58 returned 100%
branch 59 taken 100%
branch 60 taken 0%
call   61 never executed
call   62 never executed
call   63 never executed
branch 64 taken 100% (fallthrough)
branch 65 taken 0% (throw)
call   66 returned 100%
call   67 returned 100%
branch 68 taken 0% (fallthrough)
branch 69 taken 100%
branch 70 never executed
branch 71 never executed
call   72 never executed
branch 73 never executed
branch 74 never executed
call   75 never executed
branch 76 never executed
branch 77 never executed
call   78 never executed
branch 79 never executed
branch 80 never executed
call   81 never executed
branch 82 never executed
branch 83 never executed
call   84 never executed
branch 85 never executed
branch 86 never executed
call   87 never executed
branch 88 taken 100% (fallthrough)
branch 89 taken 0% (throw)
call   90 returned 100%
branch 91 taken 100%
branch 92 taken 0%
call   93 never executed
call   94 never executed
call   95 never executed
call   96 never executed
branch 97 taken 100% (fallthrough)
branch 98 taken 0% (throw)
call   99 returned 100%
call   100 returned 100%
branch 101 taken 0% (fallthrough)
branch 102 taken 100%
branch 103 never executed
branch 104 never executed
call   105 never executed
branch 106 never executed
branch 107 never executed
call   108 never executed
branch 109 never executed
branch 110 never executed
call   111 never executed
branch 112 never executed
branch 113 never executed
call   114 never executed
branch 115 never executed
branch 116 never executed
call   117 never executed
branch 118 never executed
branch 119 never executed
call   120 never executed
branch 121 taken 100% (fallthrough)
branch 122 taken 0% (throw)
call   123 returned 100%
branch 124 taken 100%
branch 125 taken 0%
call   126 never executed
call   127 never executed
call   128 never executed
call   129 never executed
        4:   55:        x.destroy(p);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
        4:   56:        x.deallocate(p, s);}}
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100%
branch  3 taken 0%
call    4 never executed
call    5 never executed
call    6 returned 100%
call    7 returned 100%
branch  8 taken 100%
branch  9 taken 0%
call   10 never executed
call   11 never executed
branch 12 taken 100% (fallthrough)
branch 13 taken 0% (throw)
call   14 returned 100%
branch 15 taken 100% (fallthrough)
branch 16 taken 0% (throw)
call   17 returned 100%
        -:   57:
function _ZN22TestAllocator_Ten_TestISaIiEE8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN22TestAllocator_Ten_TestISaIdEE8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN22TestAllocator_Ten_TestI9AllocatorIiLi100EEE8TestBodyEv called 1 returned 100% blocks executed 43%
function _ZN22TestAllocator_Ten_TestI9AllocatorIdLi100EEE8TestBodyEv called 1 returned 100% blocks executed 43%
function _ZN22TestAllocator_Ten_TestISaIiEED0Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_Ten_TestISaIiEED2Ev called 1 returned 100% blocks executed 75%
function _ZN22TestAllocator_Ten_TestISaIdEED0Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_Ten_TestISaIdEED2Ev called 1 returned 100% blocks executed 75%
function _ZN22TestAllocator_Ten_TestI9AllocatorIiLi100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_Ten_TestI9AllocatorIiLi100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN22TestAllocator_Ten_TestI9AllocatorIdLi100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_Ten_TestI9AllocatorIdLi100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN22TestAllocator_Ten_TestISaIiEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_Ten_TestISaIdEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_Ten_TestI9AllocatorIiLi100EEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN22TestAllocator_Ten_TestI9AllocatorIdLi100EEEC2Ev called 1 returned 100% blocks executed 100%
       17:   58:TYPED_TEST(TestAllocator, Ten) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
call   12 returned 100%
call   13 returned 100%
call   14 returned 100%
branch 15 taken 0% (fallthrough)
branch 16 taken 100%
call   17 never executed
call   18 returned 100%
call   19 returned 100%
call   20 returned 100%
branch 21 taken 0% (fallthrough)
branch 22 taken 100%
call   23 never executed
call   24 returned 100%
call   25 returned 100%
call   26 returned 100%
call   27 returned 100%
call   28 returned 100%
        -:   59:    typedef typename TestFixture::allocator_type  allocator_type;
        -:   60:    typedef typename TestFixture::value_type      value_type;
        -:   61:    typedef typename TestFixture::difference_type difference_type;
        -:   62:    typedef typename TestFixture::pointer         pointer;
        -:   63:
        4:   64:    allocator_type x;
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
        4:   65:    const difference_type s = 10;
        4:   66:    const value_type      v = 2;
        4:   67:    const pointer         b = x.allocate(s);
branch  0 taken 100% (fallthrough)
branch  1 taken 0% (throw)
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0% (throw)
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
call    8 returned 100%
branch  9 taken 100% (fallthrough)
branch 10 taken 0% (throw)
call   11 returned 100%
        4:   68:    if (b != 0) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
branch  6 taken 100% (fallthrough)
branch  7 taken 0%
        4:   69:        pointer e = b + s;
        4:   70:        pointer p = b;
        -:   71:        try {
       48:   72:            while (p != e) {
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
branch  2 taken 91%
branch  3 taken 9% (fallthrough)
branch  4 taken 91%
branch  5 taken 9% (fallthrough)
branch  6 taken 91%
branch  7 taken 9% (fallthrough)
       40:   73:                x.construct(p, v);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
       40:   74:                ++p;}}
    =====:   75:        catch (...) {
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    =====:   76:            while (b != p) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    =====:   77:                --p;
    =====:   78:                x.destroy(p);}
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
    =====:   79:            x.deallocate(b, s);
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
    =====:   80:            throw;}
call    0 never executed
call    1 never executed
        8:   81:        ASSERT_EQ(s, std::count(b, e, v));
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
call   24 never executed
branch 25 taken 100% (fallthrough)
branch 26 taken 0% (throw)
call   27 returned 100%
branch 28 taken 100%
branch 29 taken 0%
call   30 never executed
call   31 never executed
call   32 never executed
call   33 returned 100%
branch 34 taken 100% (fallthrough)
branch 35 taken 0% (throw)
call   36 returned 100%
call   37 returned 100%
branch 38 taken 0% (fallthrough)
branch 39 taken 100%
branch 40 never executed
branch 41 never executed
call   42 never executed
branch 43 never executed
branch 44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
call   48 never executed
branch 49 never executed
branch 50 never executed
call   51 never executed
branch 52 never executed
branch 53 never executed
call   54 never executed
branch 55 never executed
branch 56 never executed
call   57 never executed
branch 58 taken 100% (fallthrough)
branch 59 taken 0% (throw)
call   60 returned 100%
branch 61 taken 100%
branch 62 taken 0%
call   63 never executed
call   64 never executed
call   65 never executed
call   66 returned 100%
branch 67 taken 100% (fallthrough)
branch 68 taken 0% (throw)
call   69 returned 100%
call   70 returned 100%
branch 71 taken 0% (fallthrough)
branch 72 taken 100%
branch 73 never executed
branch 74 never executed
call   75 never executed
branch 76 never executed
branch 77 never executed
call   78 never executed
branch 79 never executed
branch 80 never executed
call   81 never executed
branch 82 never executed
branch 83 never executed
call   84 never executed
branch 85 never executed
branch 86 never executed
call   87 never executed
branch 88 never executed
branch 89 never executed
call   90 never executed
branch 91 taken 100% (fallthrough)
branch 92 taken 0% (throw)
call   93 returned 100%
branch 94 taken 100%
branch 95 taken 0%
call   96 never executed
call   97 never executed
call   98 never executed
call   99 never executed
call   100 returned 100%
branch 101 taken 100% (fallthrough)
branch 102 taken 0% (throw)
call   103 returned 100%
call   104 returned 100%
branch 105 taken 0% (fallthrough)
branch 106 taken 100%
branch 107 never executed
branch 108 never executed
call   109 never executed
branch 110 never executed
branch 111 never executed
call   112 never executed
branch 113 never executed
branch 114 never executed
call   115 never executed
branch 116 never executed
branch 117 never executed
call   118 never executed
branch 119 never executed
branch 120 never executed
call   121 never executed
branch 122 never executed
branch 123 never executed
call   124 never executed
branch 125 taken 100% (fallthrough)
branch 126 taken 0% (throw)
call   127 returned 100%
branch 128 taken 100%
branch 129 taken 0%
call   130 never executed
call   131 never executed
call   132 never executed
call   133 never executed
       48:   82:        while (b != e) {
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
branch  2 taken 91%
branch  3 taken 9% (fallthrough)
branch  4 taken 91%
branch  5 taken 9% (fallthrough)
branch  6 taken 91%
branch  7 taken 9% (fallthrough)
       40:   83:            --e;
       40:   84:            x.destroy(e);}
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
function _GLOBAL__sub_I_gtest_TestAllocator_One_registered_ called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        7:   85:        x.deallocate(b, s);}}
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 100%
branch  4 taken 0%
call    5 never executed
call    6 never executed
call    7 returned 100%
call    8 returned 100%
branch  9 taken 100%
branch 10 taken 0%
call   11 never executed
call   12 never executed
branch 13 taken 100% (fallthrough)
branch 14 taken 0% (throw)
call   15 returned 100%
branch 16 taken 100% (fallthrough)
branch 17 taken 0% (throw)
call   18 returned 100%
branch 19 taken 100% (fallthrough)
branch 20 taken 0%
branch 21 taken 100% (fallthrough)
branch 22 taken 0%
